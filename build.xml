<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:aether="antlib:org.eclipse.aether.ant"
         name="ball-util" basedir="." default="jar">
  <description>
    ball-util.jar
    --------------
    Java Utilities

    $Id$
  </description>

  <aether:resolve>
    <dependencies>
      <dependency coords="ball:parent:2.0:xml:compile"/>
    </dependencies>
    <properties/>
  </aether:resolve>
  <import file="${ball:parent:xml}"/>

  <target name="jar-classes"
          description="--> Compile Java source."
          depends="jar-resources">
    <javac source="${pom.properties.jre.version}"
           target="${pom.properties.jre.version}"
           destdir="${target.classes.dir}">
      <compilerarg compiler="modern" value="-Xlint"/>
      <compilerarg compiler="modern" value="-g:source,lines,vars"/>
      <classpath>
        <path refid="build.classpath"/>
      </classpath>
      <src path="${src.dir}/main/java"/>
    </javac>
    <taskdef classpathref="build.classpath"
             name="bootstrap-processor"
             classname="ball.util.ant.taskdefs.BootstrapProcessorTask"/>
    <bootstrap-processor classpathref="build.classpath"
                         basedir="${target.classes.dir}"/>
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <jni-classes classpathref="build.classpath"
                 basedir="${target.classes.dir}" property="jni.classes">
      <src path="${src.dir}/main/java"/>
    </jni-classes>
  </target>

  <target name="bean-info-for"
          description="--> Invokes &lt;bean-info-for/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <bean-info-for classpathref="build.classpath" type="${type}"/>
  </target>

  <target name="charset-list"
          description="--> Invokes &lt;charset-list/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <charset-list/>
  </target>

  <target name="combinations-count"
          description="--> Invokes &lt;combinations-count/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <combinations-count classpathref="build.classpath"
                        type="${type}" count="${count}">
      <argument type="${argument.type}" value="${argument.value}"/>
    </combinations-count>
  </target>

  <target name="combinations-of"
          description="--> Invokes &lt;combinations-of/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <combinations-of classpathref="build.classpath"
                     type="${type}" count="${count}">
      <argument type="${argument.type}" value="${argument.value}"/>
    </combinations-of>
  </target>

  <target name="inet-addresses-for"
          description="--> Invokes &lt;inet-addresses-for/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <inet-addresses-for string="${string}"/>
  </target>

  <target name="instance-of"
          description="--> Invokes &lt;instance-of/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <instance-of classpathref="build.classpath" type="${type}">
      <argument value="${argument}"/>
    </instance-of>
  </target>

  <target name="is-assignable-from"
          description="--> Invokes &lt;is-assignable-from/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <is-assignable-from classpathref="build.classpath"
                        type="${type}" subtype="${subtype}"/>
  </target>

  <target name="jaxb-marshal"
          description="--> Invokes &lt;jaxb-marshal/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <jaxb-marshal classpathref="build.classpath" type="${type}">
      <argument value="${argument}"/>
    </jaxb-marshal>
  </target>

  <target name="jaxb-unmarshal"
          description="--> Invokes &lt;jaxb-unmarshal/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <jaxb-unmarshal classpathref="build.classpath"
                    context="${context}" file="${file}"/>
  </target>

  <target name="jndi-list"
          description="--> Invokes &lt;jndi-list/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <jndi-list classpathref="build.classpath"/>
  </target>

  <target name="jndi-lookup"
          description="--> Invokes &lt;jndi-lookup/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <jndi-lookup classpathref="build.classpath" name="${name}"/>
  </target>

  <target name="jni-classes"
          description="--> Invokes &lt;jni-classes/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <jni-classes classpathref="build.classpath" basedir="${build.class.dir}">
      <src path="${src.dir}/main/java"/>
    </jni-classes>
  </target>

  <target name="locale-list"
          description="--> Invokes &lt;locale-list/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <locale-list/>
  </target>

  <target name="manifest-for"
          description="--> Invokes &lt;manifest-for/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <manifest-for classpathref="build.classpath" type="${type}"/>
  </target>

  <target name="members-of"
          description="--> Invokes &lt;members-of/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <members-of classpathref="build.classpath" type="${type}"/>
  </target>

  <target name="resource-path-to"
          description="--> Invokes &lt;resource-path-to/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <resource-path-to classpathref="build.classpath" type="${type}"/>
  </target>

  <target name="network-interfaces"
          description="--> Invokes &lt;network-interfaces/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <network-interfaces/>
  </target>

  <target name="package-list"
          description="--> Invokes &lt;package-list/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <package-list classpathref="build.classpath"
                  basedir="${target.classes.dir}">
      <src path="${src.dir}/main/java"/>
    </package-list>
  </target>

  <target name="permutations-count"
          description="--> Invokes &lt;permutations-count/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <permutations-count classpathref="build.classpath" type="${type}">
      <argument type="${argument.type}" value="${argument.value}"/>
    </permutations-count>
  </target>

  <target name="permutations-of"
          description="--> Invokes &lt;permutations-of/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <permutations-of classpathref="build.classpath" type="${type}">
      <argument type="${argument.type}" value="${argument.value}"/>
    </permutations-of>
  </target>

  <target name="resource-list"
          description="--> Invokes &lt;resource-list/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <resource-list classpathref="build.classpath" name="${name}"/>
  </target>

  <target name="run"
          description="--> Invokes &lt;run/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <run classpathref="build.classpath" type="${type}"/>
  </target>

  <target name="service-list"
          description="--> Invokes &lt;service-list/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <service-list classpathref="build.classpath" type="${type}"/>
  </target>

  <target name="show-properties"
          description="--> Invokes &lt;show-properties/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <show-properties classpathref="build.classpath"
                     basedir="${target.classes.dir}">
      <src path="${src.dir}/main/java"/>
    </show-properties>
  </target>

  <target name="subclasses-of"
          description="--> Invokes &lt;subclasses-of/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <subclasses-of classpathref="build.classpath"
                   basedir="${target.classes.dir}" type="${type}">
      <src path="${src.dir}/main/java"/>
    </subclasses-of>
  </target>

  <target name="superclasses-of"
          description="--> Invokes &lt;superclasses-of/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <superclasses-of classpathref="build.classpath" type="${type}"/>
  </target>

  <target name="uuid-generate"
          description="--> Invokes &lt;uuid-generate/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <uuid-generate/>
  </target>

  <target name="uuid-generate-random"
          description="--> Invokes &lt;uuid-generate-random/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <uuid-generate-random/>
  </target>

  <target name="uuid-generate-time"
          description="--> Invokes &lt;uuid-generate-time/&gt; task."
          depends="jar-classes">
    <taskdef classpathref="build.classpath"
             resource="ball/util/ant/defaults.properties"/>
    <uuid-generate-time/>
  </target>
</project>
